# vim: set ft=sh syn=bash :
# shellcheck shell=bash

#
# Copyright (C) 2022-2023 Chris 'sh0shin' Frage
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License, version 3,
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
#

# @plug duct-bash
# @desc General Bash checks and support settings.

# @func duct bash

# @fvar Bash SRANDOM variable instead of RANDOM (set at runtime).
declare -g DUCT_BASH_SRANDOM=false

# @fvar Bash EPOCH variable usage (set at runtime).
declare -g DUCT_BASH_EPOCH=false

# @fvar Bash version information (set at runtime).
declare -g DUCT_BASH_VERSION=""

# @deps duct-msg
# @intl true
# @life core
# @desc Check Bash version and features.
# @opts
__duct_bash() {
  __duct_intl

  if [[ ${BASH_VERSINFO[0]} -ge 5 ]] && [[ ${BASH_VERSINFO[1]} -ge 1 ]] && [[ ${BASH_VERSINFO[2]} -ge 4 ]]
  then
    export DUCT_BASH_EPOCH=true
    export DUCT_BASH_SRANDOM=true
  else
    export DUCT_BASH_EPOCH=false
    export DUCT_BASH_SRANDOM=false
  fi

  export DUCT_BASH_VERSION="${BASH_VERSION}-${MACHTYPE}"

  __duct_msg d "DUCT_BASH_VERSION=$DUCT_BASH_VERSION"
  __duct_msg d "DUCT_BASH_EPOCH=$DUCT_BASH_EPOCH"
  __duct_msg d "DUCT_BASH_SRANDOM=$DUCT_BASH_SRANDOM"

  readonly DUCT_BASH_VERSION
  readonly DUCT_BASH_EPOCH
  readonly DUCT_BASH_SRANDOM
}

# @func duct bash shopt

# @fvar Bash options to set.
declare -g -r -a DUCT_BASH_SHOPT_SET=(
  dotglob
  extglob
  globstar
  lastpipe
  nullglob
  shift_verbose
)

# @fvar Bash options to unset.
declare -g -r -a DUCT_BASH_SHOPT_UNSET=(
  extdebug
)

# @deps duct-msg
# @intl true
# @life core
# @desc Set/unset Bash options.
# @opts
__duct_bash_shopt() {
  __duct_intl

  local BASH_SHOPT

  if [[ "${#DUCT_BASH_SHOPT_SET[@]}" -ge 1 ]]
  then
    for BASH_SHOPT in "${DUCT_BASH_SHOPT_SET[@]}"
    do
      shopt -s "$BASH_SHOPT" 2>/dev/null || __duct_msg w "set: $BASH_SHOPT not available!"
    done
  fi

  if [[ "${#DUCT_BASH_SHOPT_UNSET[@]}" -ge 1 ]]
  then
    for BASH_SHOPT in "${DUCT_BASH_SHOPT_UNSET[@]}"
    do
      shopt -u "$BASH_SHOPT" 2>/dev/null || __duct_msg w "unset: $BASH_SHOPT not available!"
    done
  fi
}
