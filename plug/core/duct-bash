# vim: set ft=sh syn=bash :
# shellcheck shell=bash

#
# Copyright (C) 2022 Chris 'sh0shin' Frage
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License, version 3,
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
#

# duct-bash
# General Bash checks and support settings.

# bash

# Enable/disable Bash SRANDOM instead of RANDOM (set at runtime).
declare -g -x DUCT_BASH_SRANDOM=true

# Enable/disable Bash EPOCH variable usage (set at runtime).
declare -g -x DUCT_BASH_EPOCH=true

# deps:
# intl: true
# life: core
# desc: Check Bash version and features.
# opts:
__duct_bash() {
  __duct_intl

  if [[ ${BASH_VERSINFO[0]} -lt 4 ]]
  then
    __duct_msg e "unsupported bash version $BASH_VERSION"
    __duct_msg e "minimal bash version 4.0.0"
    return 1
  elif [[ ${BASH_VERSINFO[0]} -ge 5 ]] && [[ ${BASH_VERSINFO[1]} -ge 1 ]] && [[ ${BASH_VERSINFO[2]} -ge 4 ]]
  then
    export DUCT_BASH_EPOCH=true
    export DUCT_BASH_SRANDOM=true
  else
    export DUCT_BASH_EPOCH=false
    export DUCT_BASH_SRANDOM=false
  fi

  readonly DUCT_BASH_EPOCH
  readonly DUCT_BASH_SRANDOM

  return 0
}
readonly -f __duct_bash

# shopt

# Bash options to set.
declare -g -r -a DUCT_BASH_SHOPT_SET=(
  dotglob
  extglob
  globstar
  lastpipe
  shift_verbose
)

# Bash options to unset.
declare -g -r -a DUCT_BASH_SHOPT_UNSET=(
  extdebug
)

# deps:
# intl: true
# life: core
# desc: Set/unset Bash options.
# opts:
__duct_bash_shopt() {
  __duct_intl

  local SHOPT

  if [[ "${#DUCT_BASH_SHOPT_SET[@]}" -ge 1 ]]
  then
    for SHOPT in "${DUCT_BASH_SHOPT_SET[@]}"
    do
      shopt -s "$SHOPT" 2>/dev/null || __duct_msg w "set: $SHOPT not available!"
    done
  fi

  if [[ "${#DUCT_BASH_SHOPT_UNSET[@]}" -ge 1 ]]
  then
    for SHOPT in "${DUCT_BASH_SHOPT_UNSET[@]}"
    do
      shopt -u "$SHOPT" 2>/dev/null || __duct_msg w "unset: $SHOPT not available!"
    done
  fi
}
readonly -f __duct_bash_shopt
