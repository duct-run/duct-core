# vim: set ft=sh syn=bash :
# shellcheck shell=bash

#
# Copyright (C) 2022 Chris 'sh0shin' Frage
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License, version 3,
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
#

# duct-conf
# Load duct environment configuration.

# Enable/disbale processing config.
declare -g DUCT_CONF_ENABLE="${DUCT_CONF_ENABLE:-true}"

# Enable/disbale config debug messages.
declare -g DUCT_CONF_QUIET="${DUCT_CONF_QUIET:-false}"

# Configuration file search list (internal).
declare -g -a -r _DUCT_CONF_FILES=(
  "${HOME}/.config/duct/config"
  "${HOME}/.config/duct/env"
  "${HOME}/.ductenv"
)

# config

# deps: duct-msg
# intl: true
# life: core
# desc: Read and process duct environment configuration.
# opts:
__duct_conf() {
  local CONF_FILE
  local -a CONF_ENV

  if [[ "$DUCT_CONF_ENABLE" != true ]]
  then
    return
  fi

  local ENV
  local VAL
  local VAR
  local _REMATCH
  local _VAL

  for CONF_FILE in "${_DUCT_CONF_FILES[@]}"
  do
    if [[ -s "$CONF_FILE" ]]
    then

      if [[ "$DUCT_CONF_QUIET" != true ]]
      then
        __duct_msg d "$CONF_FILE"
      fi

      # shellcheck disable=SC1090
      readarray -t CONF_ENV < <( ( set -x; source "$CONF_FILE"; set +x ) 2>&1 )

      for ENV in "${CONF_ENV[@]}"
      do
        if [[ "$ENV" =~ (DUCT_[A-Z_]+)=([[:alnum:][:punct:][:blank:]]+) ]]
        then
          _REMATCH=( "${BASH_REMATCH[@]}" )
          VAR="${_REMATCH[1]}"
          VAL="${_REMATCH[2]//"'"}"
          _VAL="$VAL"

          if [[ "$VAR" =~ (TOKEN|SECRET|PASS) ]]
          then
            _VAL="[HIDDEN]"
          fi

          if [[ "$DUCT_CONF_QUIET" != true ]]
          then
            __duct_msg d "${VAR}=${_VAL}"
          fi

          # number
          if [[ "$VAL" =~ ^([0-9]+) ]]
          then
            declare -i "$VAR=$VAL"
          # array
          elif [[ "$VAL" =~ ^((\()([[:alnum:][:punct:][:blank:]]+)(\)))$ ]]
          then
            VAL="${BASH_REMATCH[3]}"
            declare -g -a "$VAR=( $VAL )"
          # string
          else
            declare -g "$VAR=$VAL"
          fi
        fi
      done
    fi
  done
  return
}
readonly -f __duct_conf
