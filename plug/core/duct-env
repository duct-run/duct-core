# vim: set ft=sh syn=bash :
# shellcheck shell=bash

#
# Copyright (C) 2022-2023 Chris 'sh0shin' Frage
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License, version 3,
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
#

# duct-env
# Show user duct environment configuration.

# Enable/disbale environment processing.
declare -g DUCT_ENV_ENABLE="${DUCT_ENV_ENABLE:-true}"

# Enable/disbale environment debug messages.
declare -g DUCT_ENV_QUIET="${DUCT_ENV_QUIET:-false}"

# env

# deps: duct-msg
# intl: true
# life: core
# desc: Show any user duct environment configuration.
# opts:
__duct_env() {
  __duct_intl

  local -a ENV_USER
  local ENV_ITEM

  local ENV_MSG
  local ENV_VAL
  local ENV_VAR

  # shellcheck disable=SC1091
  # load mandatory message plugin
  source "${DUCT_PLUG_DIR}/core/duct-msg"

  if [[ "$DUCT_ENV_ENABLE" != true ]]
  then
    return
  fi

  readarray -t ENV_USER < <( ( set -x; env; set +x ) 2>&1 )

  for ENV_ITEM in "${ENV_USER[@]}"
  do
    if [[ "$ENV_ITEM" =~ (DUCT_[A-Z_]+)=([[:alnum:][:punct:][:blank:]]+) ]]
    then
      ENV_VAR="${BASH_REMATCH[1]:?}"
      ENV_VAL="${BASH_REMATCH[2]:?}"
      ENV_VAL="${ENV_VAL//"'"}"
      ENV_MSG="$ENV_VAL"

      if [[ "$ENV_VAR" =~ (TOKEN|SECRET|PASS) ]]
      then
        ENV_MSG="[HIDDEN]"
      fi

      if [[ "$DUCT_ENV_QUIET" != true ]]
      then
        __duct_msg d "${ENV_VAR}=${ENV_MSG}"
      fi
    fi
  done
}
readonly -f __duct_env
